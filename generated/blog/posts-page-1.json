{"metadata":{"current_page":1,"total_pages":4},"posts":[{"title":"A Brief Look at Sector Zero and Sector One for DNA Data Storage","authors":["Jakob Luettgau"],"datetime":"2024-05-19T20:35:33Z","text":"Late 2023 the Storage Networking Industry Association (SNIA) together with the DNA Data Storage Alliance released their specification for what would be considered the master boot record but for a DNA Storage Archive. In this post, we will briefly look at the specification and illustrate the format in action.","image":"./assets/png/sector-one_codec.png","caption":null,"published":true,"id":"A-Brief-Look-at-Sector-Zero-and-Sector-One-for-DNA-Data-Storage","url":"https://jakobluettgau.github.io/#/blog/posts/A-Brief-Look-at-Sector-Zero-and-Sector-One-for-DNA-Data-Storage","date":"2024-05-19T20:35:33.000Z"},{"title":"Enabling Agile Analysis of I/O Performance Data with PyDarshan","authors":["Jakob Luettgau","Shane Snyder","Tyle Reddy","Nikolaus Awtrey","Kevin Harms","Jean Luca Bez","Rui Wang","Robert Latham","Philip Carns"],"datetime":"2023-10-10T13:27:37Z","text":"This post covers a workshop paper about PyDarshan presented at SC23 in the PROTOOLS workshop. Modern scientific applications utilize numerous software and hardware layers to efficiently access data. This approach poses a challenge for I/O optimization because of the need to instrument and correlate information across those layers. The Darshan characterization tool seeks to address this challenge by providing efficient, transparent, and compact runtime instrumentation of many common I/O interfaces. It also includes command-line tools to generate actionable insights and summary reports. However, the extreme diversity of today's scientific applications means  that not all applications are well served by one-size-fits-all analysis tools. In this work we present PyDarshan, a Python-based library that enables agile analysis of I/O performance data. PyDarshan caters to both novice and advanced users by offering ready-to-use HTML reports as well as a rich collection of APIs to facilitate custom analyses.  We present the design of PyDarshan and demonstrate its effectiveness in four diverse real-world analysis use cases.","image":"thumb.png","caption":null,"published":true,"id":"Enabling-Agile-Analysis-of-I-O-Performance-Data-with-PyDarshan","url":"https://jakobluettgau.github.io/#/blog/posts/Enabling-Agile-Analysis-of-I-O-Performance-Data-with-PyDarshan","date":"2023-10-10T13:27:37.000Z"},{"title":"Understanding Latency and Throughput Constraints for Geo-Distributed Data in the National Science Data Fabric","authors":["Jakob Luettgau"],"datetime":"2023-06-20T19:47:39Z","text":"This post covers a poster presented as HPDC 2023 about analysing latency and throughput constraints in geo-destributed deployments on academic compute and cloud resources: The National Science Data Fabric (NSDF) aims to address data-sharing needs of the growing data science community. NSDF is designed to make sharing data across geographically distributed sites easier for users who lack technical expertise and infrastructure. By developing an easy-to-install software stack, we promote the FAIR data-sharing principles in NSDF while leveraging existing high-speed data transfer infrastructures such as Globus and XRootD. This work shows how we leverage latency and throughput information between geo-distributed NSDF sites with NSDF entry points to optimize the automatic coordination of data placement and transfer across the data fabric, which can further improve the efficiency of data sharing.","image":"NSDF-Plugin_poster.pptx.png","caption":null,"published":true,"id":"Understanding-Latency-and-Throughput-Constraints-for-NSDF","url":"https://jakobluettgau.github.io/#/blog/posts/Understanding-Latency-and-Throughput-Constraints-for-NSDF","date":"2023-06-20T19:47:39.000Z"}]}